/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space,
	text
} from "svelte/internal";

function create_fragment(ctx) {
	let div2;
	let div1;
	let button;
	let i;
	let t0;
	let div0;
	let t1;
	let br0;
	let t2;
	let br1;
	let t3;
	let a0;
	let t4;
	let t5;
	let a1;
	let t6;
	let t7;
	let a2;
	let t8;
	let t9;
	let a3;
	let t10;
	let t11;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div1 = element("div");
			button = element("button");
			i = element("i");
			t0 = space();
			div0 = element("div");
			t1 = text("© Copyright 2022. All rights reserved.");
			br0 = element("br");
			t2 = text("\n      Designed and developed by Roberto Rivera.");
			br1 = element("br");
			t3 = text("\n      Powered by\n      ");
			a0 = element("a");
			t4 = text("Plenti");
			t5 = text("\n      of\n      ");
			a1 = element("a");
			t6 = text("Svelte");
			t7 = text(",\n      ");
			a2 = element("a");
			t8 = text("Line Awesome");
			t9 = text("\n      and\n      ");
			a3 = element("a");
			t10 = text("tailwindcss");
			t11 = text(".");
			this.h();
		},
		l(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			button = claim_element(div1_nodes, "BUTTON", {});
			var button_nodes = children(button);
			i = claim_element(button_nodes, "I", { class: true });
			children(i).forEach(detach);
			button_nodes.forEach(detach);
			t0 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true, role: true });
			var div0_nodes = children(div0);
			t1 = claim_text(div0_nodes, "© Copyright 2022. All rights reserved.");
			br0 = claim_element(div0_nodes, "BR", {});
			t2 = claim_text(div0_nodes, "\n      Designed and developed by Roberto Rivera.");
			br1 = claim_element(div0_nodes, "BR", {});
			t3 = claim_text(div0_nodes, "\n      Powered by\n      ");
			a0 = claim_element(div0_nodes, "A", { target: true, rel: true, href: true });
			var a0_nodes = children(a0);
			t4 = claim_text(a0_nodes, "Plenti");
			a0_nodes.forEach(detach);
			t5 = claim_text(div0_nodes, "\n      of\n      ");
			a1 = claim_element(div0_nodes, "A", { target: true, rel: true, href: true });
			var a1_nodes = children(a1);
			t6 = claim_text(a1_nodes, "Svelte");
			a1_nodes.forEach(detach);
			t7 = claim_text(div0_nodes, ",\n      ");
			a2 = claim_element(div0_nodes, "A", { target: true, rel: true, href: true });
			var a2_nodes = children(a2);
			t8 = claim_text(a2_nodes, "Line Awesome");
			a2_nodes.forEach(detach);
			t9 = claim_text(div0_nodes, "\n      and\n      ");
			a3 = claim_element(div0_nodes, "A", { target: true, rel: true, href: true });
			var a3_nodes = children(a3);
			t10 = claim_text(a3_nodes, "tailwindcss");
			a3_nodes.forEach(detach);
			t11 = claim_text(div0_nodes, ".");
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(i, "class", "las la-chevron-circle-up text-5xl md:text-6xl rounded-full overflow-hidden bg-clip-content opacity-70 hover:opacity-100 accent");
			attr(a0, "target", "_blank");
			attr(a0, "rel", "noopener");
			attr(a0, "href", "https://plenti.co/");
			attr(a1, "target", "_blank");
			attr(a1, "rel", "noopener");
			attr(a1, "href", "https://svelte.dev/");
			attr(a2, "target", "_blank");
			attr(a2, "rel", "noopener");
			attr(a2, "href", "https://icons8.com/line-awesome");
			attr(a3, "target", "_blank");
			attr(a3, "rel", "noopener");
			attr(a3, "href", "https://tailwindcss.com/");
			attr(div0, "class", "footnote mt-2");
			attr(div0, "role", "contentinfo");
			attr(div1, "class", "w-full text-center");
			attr(div2, "class", "flex flex-wrap items-center justify-between pb-4 pt-2");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, button);
			append(button, i);
			append(div1, t0);
			append(div1, div0);
			append(div0, t1);
			append(div0, br0);
			append(div0, t2);
			append(div0, br1);
			append(div0, t3);
			append(div0, a0);
			append(a0, t4);
			append(div0, t5);
			append(div0, a1);
			append(a1, t6);
			append(div0, t7);
			append(div0, a2);
			append(a2, t8);
			append(div0, t9);
			append(div0, a3);
			append(a3, t10);
			append(div0, t11);

			if (!mounted) {
				dispose = listen(button, "click", scrollTop);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			mounted = false;
			dispose();
		}
	};
}

function scrollTop() {
	window.scrollTo({ top: 0, left: 0, behavior: "smooth" });
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;